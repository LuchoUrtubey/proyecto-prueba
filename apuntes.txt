--INSTALAR GIT

--PARA VERIFICAR SI ESTÁ CORRECTAMENTE INSTALADO
    en la terminal escribir
      git version
      (debería devolver la info de tu version)
      ejemplo
      git version 2.38.0.windows.1

--PARA ACTUALIZAR A LA ÚLTIMA VERSIÓN EN WINDOWS
    en la terminal escribir
      git update-git-for-windows

--CONFIGURACIÓN DE GIT
    en la terminal escribir
      git config --global user.name "mi nombre"
    y luego
      git config --global user.email "miemail@example.com"

    PARA SABER QUE USUARIO Y MAIL ESTÁN CONFIGURADOS
      git config --global user.name
      (debería devolver la info de tu usuario)
      git config --global user.email
      (debería devolver la info de tu mail) 

--PASOS A SEGUIR PARA SUBIR UN REPOSITORIO
    dentro de la carpeta de tu proyecto ir a la terminal y escribir
      git init
      (da inicio a tu repositorio dentro de git)
      (debería aparecer al lado de cada archivo la letra U) U= Untracked (sin seguimiento)

    para agregar los archivos escribir en la terminal
      git add nombrearhivo
      (debería cambiar la letra U por la letra A) A= Added (agregado)
      ejemplo
      git add index.html

    para saber el estado de cada archivo escribir en la terminal
      git status
      (debería devolver el estado de cada archivo)

    para agregar todos los archivos de una sola vez, escribir en la terminal
      git add .
      (deberían cambiar en todos los archivos la letra U por la A)

    para generar una copia con mensaje escribimos en la terminal
      git commit -m "mensaje"
      (debería devolver la lista de archivos que se hicieron commit y desaparecer sus letras)

      git log --oneline
      (debería devolver en una línea los commits realizados)  


--AL REALIZAR CAMBIOS EN TU PROYECTO
    en el o los archivos que hagas cambios se agregará la letra M (M= Modified) modificado
    cuando consideres que es hora de guardar escribir en la terminal
      git status (para ver los archivos que fueron modificados o creados)
      git add nombrearhivo (para subir de aun archivo por vez) 
      git add . (para subir todos de una sola vez)
      Si se realizaron bien estos pasos deberían desaparecer las letras de los archivos

--SUBIR AL REPOSITORIO REMOTO GITHUB
    crear un nuevo repositorio en GITHUB
    escribir en la terminal
    git remote add origin https://github.com/tuusuario/turepositorio.git
    (crea la conexión con el repositorio remoto de github para poder subir los archivos)
    para corroborar que este la conexión correctamente escribir en la terminal
    git remote -v
    (debería devolver los datos origin url fetch y push)
    para subir mis archivos escribir en la terminal
    git push origin master
    (pide verificar usuario y contraseña para hacer la conexión)
    (Esto sube el repositorio a github en la rama master)
    Verificar en tu cuenta de github que esté subido o escribir en la terminal
    git log --oneline
    (debería devolver el historial de nuestro repositorio con sus commits)

--CLONAR UN REPOSITORIO
    ir al repositorio en github y dentro de code copiar la url que nos brinda
    crear una carpeta nueva abrir la terminal dentro de esa carpeta y escribir
    git clone https://github.com/tuusuario/turepositorio.git
    (debería descargar completo todo nuestro repositorio con sus ramas y commits)
    cerrar la terminal y abrir la carpeta descargada con Visual Studio Code y en la terminal escribir
    git log --oneline
    (si hiciste los pasos correctamente deberías ver el historial)
    
--IGNORAR archivos
    para ignorar ciertos archivos para que git no les haga seguimiento crear el arvhivo
    .gitignore
    (escribir dentro del archivo creado una lista con los nombres de los archivos a ignorar)
    (si se hizo todo correcto desapareceran las letras de seguimiento)

    